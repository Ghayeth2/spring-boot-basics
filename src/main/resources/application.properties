
# Port
server.port=8080

# White label
server.error.whitelabel.enabled=true

# base url
# server.servlet.context-path=/base_url

# Log
logging.file.name=./log/blog.log

# OFF > FATAL > ERROR > WARN > INFO >DEBUG > TRACE
logging.level.root=INFO
## servlet
#server.servlet.context-parameters.secretinformation=Hamit Mizrak
#
## proje path
## server.servlet.context-path=/yoladi/

## swagger open api 3.0
## http://localhost:8080/swagger-ui.html
## http://localhost:8080/v3/api-docs/
## http://localhost:8080/api-docs/
## springdoc.api-docs.path=/api-docs
## springdoc.swagger-ui.path=/swagger-ui-custom.html
#
#
#########################################################################
#### Thymeleaf ##########################################################
## Thymeleaf
#spring.thymeleaf.enabled=true
#
#
#########################################################################
#### Security ##########################################################
## JWT
#jwt.secret=hamitmizrak
##jwt.tokenvalidity=2592000

## Database config
logging.level.org.springframework.jdbc.core = TRACE
spring.jpa.properties.hibernate.format_sql =true
spring.jpa.properties.hibernate.show_sql=true


# spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = update


# H2DB
## Generic JNDI Data Source
#in Memory
#spring.datasource.url=jdbc:h2:mem:testdb
# Directory on Disk
# spring.datasource.url=jdbc:h2:file:C:/data/testdb
#Current User Directory
#spring.datasource.url=jdbc:h2:file:~/testdb
##Current Working Directory

# http://localhost:8081/h2-console
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:file:./memory_persist/testdb
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true


## Mysql
##CREATE SCHEMA `patika_course` DEFAULT CHARACTER SET utf8 COLLATE utf8_turkish_ci ;
## use patika_course db;
spring.datasource.url=jdbc:mysql://localhost:3306/patika_course?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=ThinkpadE15Gen2
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
logging.level.org.hibernate.sql=DEBUG



#  Engin of MySQL is MySQL5InnoDBDialect it is the one that takes care of all transactions

#
#spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot?allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=ThinkpadE15Gen2

#  Engin of MySQL is MySQL5InnoDBDialect it is the one that takes care of all transactions
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true

## Postgresql
#CREATE DATABASE testdb  WITH  OWNER = postgres  ENCODING = 'UTF8'  CONNECTION LIMIT = -1;
#spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.show-sql=true

## Postgresql (Docker )
#spring.datasource.url=jdbc:postgresql://postgresqldb:5432/testdb
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.show-sql=true



# Oracle
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:orcl
#spring.datasource.username=system
#spring.datasource.password=Password123